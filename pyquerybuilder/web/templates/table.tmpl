
<!-- table.tmpl -->
#if $total

<!--begin custom header content for this example-->
<div class="yui-skin-sam">

Found $total results
<div id="$tag"></div>

<script type="application/javascript">
//<![CDATA[
YAHOO.example.DynamicData = function() {
    // Column definitions
    var myColumnDefs = ${coldefs};

    // Custom parser
    var stringToDate = function(sData) {
        var array = sData.split("-");
        return new Date(array[1] + " " + array[0] + ", " + array[2]);
    };
    
    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("yuijson?");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "records",
        fields:  ${fields} ,
        metaFields: {
            totalRecords: "totalRecords" // Access to value in the server response
        }
    };

    // Overrite default generateRequest to adjust for parameters used on server side
    // Example taken from datatable.js default implementation
    var myRequestBuilder = function(oState, oSelf) {
            // Set defaults
            oState = oState || {pagination:null, sortedBy:null};
            var sort = (oState.sortedBy) ? oState.sortedBy.key : oSelf.getColumnSet().keys[0].getKey();
            var dir = (oState.sortedBy && oState.sortedBy.dir === YAHOO.widget.DataTable.CLASS_DESC) ? "desc" : "asc";
            var idx = (oState.pagination) ? oState.pagination.recordOffset : 0;

            // parameters used on server side
            var params = "input=$input&limit=$rowsperpage&idx=" + idx;
            // Build the request
            return params + "&sort=" + sort + "&dir=" + dir;
        };
    // DataTable configuration
    var myConfigs = {
        initialRequest: "input=$input&limit=$rowsperpage&idx=0&sort=$title1&dir=desc", // Initial request for first page of data
        dynamicData: true, // Enables dynamic server-driven data
        sortedBy : {key:"id", dir:YAHOO.widget.DataTable.CLASS_ASC}, // Sets UI initial sort arrow
        paginator: new YAHOO.widget.Paginator({ rowsPerPage:$rowsperpage}), // Enables pagination 
        generateRequest: myRequestBuilder
    };
    
    // DataTable instance
    var myDataTable = new YAHOO.widget.DataTable("$tag", myColumnDefs, myDataSource, myConfigs);



    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        return oPayload;
    }
    
    return {
        ds: myDataSource,
        dt: myDataTable
    };
}();
//]]>
</script>


</div> <!-- class="yui-skin-sam" -->
<br />

#end if
<!-- end of table.tmpl -->

